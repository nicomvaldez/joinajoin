<?phpclass SearchesController extends AppController{    var $paginate = array();        public $name = 'Searches';    public $uses = array(        'Property',        'Property_types',        'Request',        'SearchKeyword',        'SearchLog',        'Properties_day',        'Properties_hour',		'Properties_extra_joinables',        'EmailTemplate'    );    public $components = array(        'Wdcalendar',        'OauthConsumer', 'Session'    );    public $helpers = array(        'Calendar',        'Embed','Session','Html','Form'    );    public function index() {        $this->pageTitle = __l('Searched');        $collections = $this->Property_types->find('all', array(                'conditions'=> array(                    'Property_types.is_active' => 1                )            )        );        $active_properties = $this->Property->find('all', array(                'conditions' => array(                    'Property.is_approved' => 1 ,                    'Property.is_active' => 1,                    'Property.admin_suspend' => 0                )            )        );        $cities = array();                foreach ($active_properties as $act_prop) {            if ($act_prop["City"]["name"] != "" && !in_array($act_prop["City"]["name"], $cities)) {                $cities[$act_prop["City"]["id"]] = $act_prop["City"]["name"];            }        }                //sort($cities);        $this->set("collections_search", $collections);        $this->set("cities", $cities);    }public function mostrar(){	        $this->pageTitle = __l('Mostrar');        //Post Search paginate				if ($this->params['named']['do'] && $this->params['named']['do'] == 'search'){  //si viene del paginador cambio formato de consulta						$_GET["do"] = $this->params['named']['do'];			$_GET["city"] = $this->params['named']['city'];			$_GET["tipo"] = $this->params['named']['tipo'];			$_GET["property_type"] = $this->params['named']['property_type'];						}                                if ($_GET["do"] && $_GET["do"] == "search"){        	            $search_conditions = array(                'Property.is_approved' => 1 ,                'Property.is_active' => 1,                'Property.admin_suspend' => 0            );            if (!empty($_GET["city"]) && $_GET["city"] != "all") {                $search_conditions["Property.country_id"] = $_GET["city"]; //volver a city_id si queiro por ciudades            };						if (!empty($_GET["tipo"]) && $_GET["tipo"] != "") {//si es una propiedad                $search_conditions["Property.join_or_item_value"] = $_GET["tipo"]; //volver a city_id si queiro por ciudades            };			                        if (!empty($_GET["property_type"]) && $_GET["property_type"] != "all") {                $search_conditions["Property.property_type_id"] = $_GET["property_type"];             }            /*                    $search_properties = $this->Property->find('all', array(                    'conditions' => $search_conditions                )            );            */            //$this->set("searched", true);            //$this->set("search_properties", $search_properties);            //paginacion con orden            //$ordenarx = $_GET['sortby'];                        if (!empty($ordenarx)) {                if ($ordenarx == 'distance') {                    $order = array(                        'distance'                    );                } elseif ($ordenarx == 'favorites') {                    $order = array(                        'Property.property_favorite_count'                    );                } elseif ($ordenarx == 'high') {                    $order = array(                        'Property.price_per_night'                    );                } elseif ($ordenarx == 'low') {                    $order = array(                        'Property.price_per_night' => 'DESC'                    );                } elseif ($ordenarx == 'recent') {                    $order = array(                        'Property.id' => 'DESC'                    );                } elseif ($ordenarx == 'featured') {                    $order = array(                        'Property.is_featured' => 'DESC'                    );                } elseif ($ordenarx == 'reviews') {                    $order = array(                        'Property.positive_feedback_count' => 'desc'                       );                }            } else {                    $order = array(                        'Property.id' => 'desc'                    );            }		   //pruebo asociar el modelo de propoerties extras en la consulta para que me traiga los datos de los items cuando este los tenga/* no lo necesito por ahora           $this->Property->bindModel(				array('hasOne' => array(					'properties_extra_joinables' => array(						'class'=>'Properties_extra_joinables'						)					)				)		    );*/					//debug($search_conditions);            //seteo la variable paginate para usar en paginate()            $resultado = $this->paginate = array(                'conditions' => array($search_conditions) ,                'order' => $order,                'limit' => 10            );            //traigo resultados paginados            $search_properties = $this->paginate();            //************ preparo el search keywords            $search_keyword_pablo['named']['cityname'] = $search_properties[0]['Property']['address'];            $search_keyword_pablo['named']['city'] = 'all';            $search_keyword_pablo['named']['latitude'] = $search_properties[0]['Property']['latitude'];            $search_keyword_pablo['named']['longitude'] = $search_properties[0]['Property']['longitude'];            $search_keyword_pablo['named']['checkin'] = $search_properties[0]['Property']['checkin'];            $search_keyword_pablo['named']['checkout'] = $search_properties[0]['Property']['checkout'];            $search_keyword_pablo['named']['propertytype'] = $search_properties[0]['Property']['property_type_id'];            $search_keyword_pablo['named']['min_bedrooms'] = '1';            $search_keyword_pablo['named']['min_bathrooms'] ='1';             $search_keyword_pablo['named']['min_beds'] = '1';            $search_keyword_pablo['named']['range_from'] = '1';            $search_keyword_pablo['named']['range_to'] = '300+';            $search_keyword_pablo['named']['type'] = 'search';                        //envio los joins            $this->set('city', $_GET['city']);            $this->set('property_type', $_GET['property_type']);            $this->set('search_keyword', $search_keyword_pablo);            $this->set('properties', $search_properties);          }    }// end mostrar}//end controller?>